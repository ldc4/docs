(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{380:function(t,v,a){"use strict";a.r(v);var _=a(25),s=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"《javascript高级程序设计》"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#《javascript高级程序设计》"}},[t._v("#")]),t._v(" 《JavaScript高级程序设计》")]),t._v(" "),a("h2",{attrs:{id:"javascript简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript简介"}},[t._v("#")]),t._v(" JavaScript简介")]),t._v(" "),a("p",[t._v("Netscape公司开发一种名为LiveScript的脚本语言，为了炒热度，改名为JavaScript")]),t._v(" "),a("p",[t._v("1997年，以JavaScript 1.1为蓝本，提交给ECMA，指定TC39来指定标准ECMA-262")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tc39/ecma262",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECMA-262"),a("OutboundLink")],1),t._v(": 定义一种名为ECMAScript(ek-ma-script)的新脚本语言的标准")]),t._v(" "),a("p",[t._v("JS = ES + BOM + DOM")]),t._v(" "),a("p",[t._v("DOM（文档对象模型）: 针对XML但经过扩展用于HTML的应用程序编程接口")]),t._v(" "),a("p",[t._v("BOM（浏览器对象模型）: 支持可以访问和操作浏览器窗口")]),t._v(" "),a("h2",{attrs:{id:"在html中使用javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在html中使用javascript"}},[t._v("#")]),t._v(" 在HTML中使用JavaScript")]),t._v(" "),a("p",[a("code",[t._v("<script>")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("必填")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("默认值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("async")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("表示应该立即下载脚本，但不应妨碍页面中的其他操作，比如下载器他资源或等待加载其他脚本（只对外部脚本文件有效）")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("charset")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("表示通过src属性指定的代码的字符集（由于大多数浏览器会忽略它的值，因此这个属性很少有人用）")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("defer")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("表示脚本可以延迟到文档完全被解析和显示之后再执行（只对外部脚本文件有效）")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("language")]),t._v(" "),a("td",[t._v("已废弃")]),t._v(" "),a("td",[t._v("原来用于表示编写代码使用的脚本语言（如JavaScript、JavaScript1.2或VBScript）")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("src")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("表示要执行代码的外部文件")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("表示编写代码使用的脚本语言的内容类型(可以看成是language的替代属性)")]),t._v(" "),a("td",[t._v("text/javascript")])])])]),t._v(" "),a("p",[t._v("一般来说，用到的就是src，然后为了性能可能会用到defer和async")]),t._v(" "),a("p",[t._v("或者在"),a("code",[t._v("<script>code<\/script>")]),t._v("之间直接写代码")]),t._v(" "),a("p",[t._v("在有src的情况，直接在标签内写代码是没有用的")]),t._v(" "),a("p",[t._v("defer脚本最好只加载一个：虽然规范是要求按顺序，并在DOMContentLoaded之前，但浏览器实现不一定。")]),t._v(" "),a("p",[t._v("IE4、Firefox 3.5、Safari 5 和 Chrome是最早支持defer属性的浏览器。其他浏览器会忽略这个属性，像平常一样处理脚本。\n为此，把延迟脚本放在页面底部依然是最佳选择。")]),t._v(" "),a("p",[t._v("异步脚本一定会在页面的load事件前执行，但可能会在DOMContentLoaded之前或之后执行。")]),t._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("p",[t._v("ECMAScript中的一切都区分大小写")]),t._v(" "),a("p",[t._v("标识符：变量、函数、属性的名字，或者函数的参数。")]),t._v(" "),a("ul",[a("li",[t._v("第一个字符必须是一个字母、下划线(_)或一个美元符号($)")]),t._v(" "),a("li",[t._v("其他字符可以是字母、下划线、美元符号或数字")])]),t._v(" "),a("p",[t._v("注释")]),t._v(" "),a("p",[t._v('严格模式: "use strict"')]),t._v(" "),a("p",[t._v("语句")]),t._v(" "),a("h3",{attrs:{id:"关键字和保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字和保留字"}},[t._v("#")]),t._v(" 关键字和保留字")]),t._v(" "),a("p",[t._v("ECMA-262定义的全部关键字：（带*号是第5版新增的）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("break")]),t._v(" "),a("td",[t._v("do")]),t._v(" "),a("td",[t._v("instanceof")]),t._v(" "),a("td",[t._v("typeof")])]),t._v(" "),a("tr",[a("td",[t._v("case")]),t._v(" "),a("td",[t._v("else")]),t._v(" "),a("td",[t._v("new")]),t._v(" "),a("td",[t._v("var")])]),t._v(" "),a("tr",[a("td",[t._v("catch")]),t._v(" "),a("td",[t._v("finally")]),t._v(" "),a("td",[t._v("return")]),t._v(" "),a("td",[t._v("void")])]),t._v(" "),a("tr",[a("td",[t._v("continue")]),t._v(" "),a("td",[t._v("for")]),t._v(" "),a("td",[t._v("switch")]),t._v(" "),a("td",[t._v("while")])]),t._v(" "),a("tr",[a("td",[t._v("debugger*")]),t._v(" "),a("td",[t._v("function")]),t._v(" "),a("td",[t._v("this")]),t._v(" "),a("td",[t._v("with")])]),t._v(" "),a("tr",[a("td",[t._v("default")]),t._v(" "),a("td",[t._v("if")]),t._v(" "),a("td",[t._v("throw")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("delte")]),t._v(" "),a("td",[t._v("in")]),t._v(" "),a("td",[t._v("try")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("第5版把非严格模式下运行时的保留字缩减为：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("class")]),t._v(" "),a("td",[t._v("enum")]),t._v(" "),a("td",[t._v("extends")]),t._v(" "),a("td",[t._v("super")])]),t._v(" "),a("tr",[a("td",[t._v("const")]),t._v(" "),a("td",[t._v("export")]),t._v(" "),a("td",[t._v("import")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("在严格模式下，第5版还对以下保留字施加了限制：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("implements")]),t._v(" "),a("td",[t._v("package")]),t._v(" "),a("td",[t._v("public")])]),t._v(" "),a("tr",[a("td",[t._v("interface")]),t._v(" "),a("td",[t._v("private")]),t._v(" "),a("td",[t._v("static")])]),t._v(" "),a("tr",[a("td",[t._v("let")]),t._v(" "),a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("yield")])])])]),t._v(" "),a("h3",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("p",[t._v("定义变量，在ES6中推荐使用const和let来替代var")]),t._v(" "),a("p",[t._v("可以忽略书上讲的")]),t._v(" "),a("h3",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("p",[t._v("5种基本数据类型："),a("code",[t._v("Undefined")]),t._v(" "),a("code",[t._v("Null")]),t._v(" "),a("code",[t._v("Boolean")]),t._v(" "),a("code",[t._v("Number")]),t._v(" "),a("code",[t._v("String")])]),t._v(" "),a("p",[t._v("1种复杂数据类型："),a("code",[t._v("Object")])]),t._v(" "),a("p",[t._v("ECMAScript不支持任何创建自定义类型的机制")]),t._v(" "),a("p",[t._v("typeof操作符：用于检测变量的数据类型")]),t._v(" "),a("p",[t._v("返回结果有：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v('"undefined"')]),t._v(" "),a("td",[t._v("如果这个值未定义")])]),t._v(" "),a("tr",[a("td",[t._v('"boolean"')]),t._v(" "),a("td",[t._v("如果这个值是布尔值")])]),t._v(" "),a("tr",[a("td",[t._v('"string"')]),t._v(" "),a("td",[t._v("如果这个值是字符串")])]),t._v(" "),a("tr",[a("td",[t._v('"number"')]),t._v(" "),a("td",[t._v("如果这个值是数值")])]),t._v(" "),a("tr",[a("td",[t._v('"object"')]),t._v(" "),a("td",[t._v("如果这个值是对象或null")])]),t._v(" "),a("tr",[a("td",[t._v('"function"')]),t._v(" "),a("td",[t._v("如果这个值是函数")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("从技术角度将，函数在ECMAScript中是对象，不是一种数据类型。\n然而，函数也确实有一些特殊的属性，因此通过typeof操作符来区分函数和其他对象是有必要的")])]),t._v(" "),a("h4",{attrs:{id:"undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" Undefined")]),t._v(" "),a("p",[t._v("声明但未初始化")]),t._v(" "),a("p",[t._v("对于未声明的变量只能执行typeof")]),t._v(" "),a("blockquote",[a("p",[t._v("对未声明的变量调用delete，不会报错，但是没有意义。在严格模式会报错")])]),t._v(" "),a("blockquote",[a("p",[t._v("即便未初始化的变量会自动被赋值为undefined值，但显式地初始化变量依然是明智的选择。"),a("br"),t._v("\n如果能够做到这一点，那么当typeof操作符返回“undefined”值时，我们就知道被检查的变量还没有被声明，而不是尚未初始化。")])]),t._v(" "),a("h4",{attrs:{id:"null类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null类型"}},[t._v("#")]),t._v(" Null类型")]),t._v(" "),a("p",[t._v("表示一个空对象指针")]),t._v(" "),a("blockquote",[a("p",[t._v("如果定义的变量准备在将来用于保存对象，那么最好将该变量初始化为null而不是其他值。"),a("br"),t._v("\n这样一来，只要直接检查null值就可以知道相应的变量是否已经保存了一个对象的引用。")])]),t._v(" "),a("p",[t._v("undefined值是派生自null值，所以 null == undefined")]),t._v(" "),a("h4",{attrs:{id:"boolean类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean类型"}},[t._v("#")]),t._v(" Boolean类型")]),t._v(" "),a("p",[t._v("转换规则：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("转换为true")]),t._v(" "),a("th",[t._v("转换为false")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("非空字符串")]),t._v(" "),a("td",[t._v('""(空字符串)')])]),t._v(" "),a("tr",[a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("非零数字值(包括Infinity)")]),t._v(" "),a("td",[t._v("0和NaN")])]),t._v(" "),a("tr",[a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("任何对象")]),t._v(" "),a("td",[t._v("null")])]),t._v(" "),a("tr",[a("td",[t._v("Undefined")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("undefined")])])])]),t._v(" "),a("h4",{attrs:{id:"number类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number类型"}},[t._v("#")]),t._v(" Number类型")]),t._v(" "),a("p",[t._v("使用IEEE754格式来表示整数和浮点数值")]),t._v(" "),a("h5",{attrs:{id:"整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数"}},[t._v("#")]),t._v(" 整数")]),t._v(" "),a("p",[t._v("十进制: 55"),a("br"),t._v("\n八进制: 070 (严格模式下无效)"),a("br"),t._v("\n十六进制: 0xA")]),t._v(" "),a("blockquote",[a("p",[t._v("+0 和 -0 相等")])]),t._v(" "),a("h5",{attrs:{id:"浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[t._v("#")]),t._v(" 浮点数")]),t._v(" "),a("p",[t._v("浮点数值：该数值中必须包含一个小数点，并且小数点后面必须至少有一位数字。")]),t._v(" "),a("blockquote",[a("p",[t._v("虽然小数点前面可以没有整数，但不推荐这种写法")])]),t._v(" "),a("p",[t._v("由于保存浮点数值需要的内存空间是保存整数值的两倍，因此ECMAScript会不失时机地将浮点数值转换为整数值")]),t._v(" "),a("ul",[a("li",[t._v("如果小数点后面没有跟任何数字（1.）")]),t._v(" "),a("li",[t._v("如果浮点数值本身表示的就是一个整数（10.0）")])]),t._v(" "),a("p",[t._v("可以用e表示法：3.125e7 == 31250000")]),t._v(" "),a("p",[t._v("默认会将小数点后面带有6个0以上的浮点数值转换为e表示法")]),t._v(" "),a("p",[t._v("0.1 + 0.2 != 0.3")]),t._v(" "),a("h5",{attrs:{id:"数值范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值范围"}},[t._v("#")]),t._v(" 数值范围")]),t._v(" "),a("p",[a("code",[t._v("Number.MIN_VALUE")]),t._v(" == 5e-324"),a("br"),t._v(" "),a("code",[t._v("Number.MAX_VALUE")]),t._v(" == 1.7976931348623157e+308"),a("br"),t._v(" "),a("code",[t._v("Number.POSITIVE_INFINITY")]),t._v(" == Infinity"),a("br"),t._v(" "),a("code",[t._v("Number.NEGATIVE_INFINITY")]),t._v(" == -Infinity")]),t._v(" "),a("p",[t._v("超过"),a("code",[t._v("Number.MAX_VALUE")]),t._v("，则为"),a("code",[t._v("Infinity")]),t._v("或"),a("code",[t._v("-Infinity")])]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("isFinite()")]),t._v("来判断")]),t._v(" "),a("h5",{attrs:{id:"nan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nan"}},[t._v("#")]),t._v(" NaN")]),t._v(" "),a("p",[t._v("Not a Number，表示一个本要返回数值的操作数未返回数值的情况")]),t._v(" "),a("p",[t._v("除以0，不会报错，会得到NaN")]),t._v(" "),a("p",[t._v("特点：")]),t._v(" "),a("ul",[a("li",[t._v("任何涉及NaN的操作都会返回NaN")]),t._v(" "),a("li",[t._v("NaN与任何值都不相等，包括NaN本身")])]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("isNaN()")]),t._v("来判断，在接收到一个值之后，会尝试将这个值转换为数值")]),t._v(" "),a("h5",{attrs:{id:"数值转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值转换"}},[t._v("#")]),t._v(" 数值转换")]),t._v(" "),a("p",[t._v("有3个函数可以把非数值转换为数值："),a("code",[t._v("Number()")]),t._v("、"),a("code",[t._v("parseInt()")]),t._v("、"),a("code",[t._v("parseFloat()")])]),t._v(" "),a("p",[a("code",[t._v("Number()")]),t._v("的转换规则：")]),t._v(" "),a("ul",[a("li",[t._v("如果是Boolean值，true和false将分别被转换为1和0")]),t._v(" "),a("li",[t._v("如果是null值，返回0")]),t._v(" "),a("li",[t._v("如果是undefined，返回NaN")]),t._v(" "),a("li",[t._v("如果是字符串，遵循下列规则：\n"),a("ul",[a("li",[t._v("如果字符串中只包含数字（包含正负号），将转换为十进制数值，前导0会被忽略")]),t._v(" "),a("li",[t._v("如果字符串中包含有效的浮点格式，将转换为对应的浮点数值，前导0会被忽略")]),t._v(" "),a("li",[t._v("如果字符串中包含有效的十六进制格式（例如0xf）,将转换为相同大小的十进制整数值")]),t._v(" "),a("li",[t._v("如果字符串是空的，将转换为0")]),t._v(" "),a("li",[t._v("如果字符串中包含除上述格式之外的字符，将转换为NaN")])])]),t._v(" "),a("li",[t._v("如果是对象，则调用valueOf()方法，然后按照前面的规则进行转换。如果转换为NaN，则调用toString()方法，然后再按照前的规则进行转换")])]),t._v(" "),a("p",[a("code",[t._v("parseInt()")]),t._v("的转换规则：")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseInt",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN说得很详细"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("在使用 parseInt 时，一定要指定一个 radix。")]),t._v(" "),a("p",[t._v("parseInt不能解析出Infinity")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("filterInt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(\\-|\\+)?([0-9]+|Infinity)$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("code",[t._v("parseFloat()")]),t._v("的转换规则：")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseFloat",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN说得很详细"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("与parseInt的区别在于始终会忽略前导0")]),t._v(" "),a("p",[t._v("如果字符串包含的是一个可解析为整数的数（没有小数点，或者小数点后都是0），parseFloat会返回整数。")]),t._v(" "),a("h4",{attrs:{id:"string类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string类型"}},[t._v("#")]),t._v(" String类型")]),t._v(" "),a("p",[t._v("表示由0或多个16位Unicode字符组成的字符序列，即字符串。")]),t._v(" "),a("p",[t._v("字符串可以由双引号(\"\")或单引号('')表示。")]),t._v(" "),a("h5",{attrs:{id:"字符字面量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符字面量"}},[t._v("#")]),t._v(" 字符字面量")]),t._v(" "),a("p",[t._v("String数据类型包含一些特殊的字符字面量，也叫转义序列，用于表示非打印字符，或者具有其他用途的字符。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字面量")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\0")]),t._v(" "),a("td",[t._v("空字符")])]),t._v(" "),a("tr",[a("td",[t._v("'")]),t._v(" "),a("td",[t._v("单引号")])]),t._v(" "),a("tr",[a("td",[t._v('"')]),t._v(" "),a("td",[t._v("双引号")])]),t._v(" "),a("tr",[a("td",[t._v("\\")]),t._v(" "),a("td",[t._v("反斜杠")])]),t._v(" "),a("tr",[a("td",[t._v("\\n")]),t._v(" "),a("td",[t._v("换行")])]),t._v(" "),a("tr",[a("td",[t._v("\\r")]),t._v(" "),a("td",[t._v("回车")])]),t._v(" "),a("tr",[a("td",[t._v("\\v")]),t._v(" "),a("td",[t._v("垂直制表符")])]),t._v(" "),a("tr",[a("td",[t._v("\\t")]),t._v(" "),a("td",[t._v("水平制表符")])]),t._v(" "),a("tr",[a("td",[t._v("\\b")]),t._v(" "),a("td",[t._v("退格")])]),t._v(" "),a("tr",[a("td",[t._v("\\f")]),t._v(" "),a("td",[t._v("换页")])]),t._v(" "),a("tr",[a("td",[t._v("\\uXXXX")]),t._v(" "),a("td",[t._v("unicode码")])]),t._v(" "),a("tr",[a("td",[t._v("\\xXX")]),t._v(" "),a("td",[t._v("Latin-1 字符(x小写)")])])])]),t._v(" "),a("p",[t._v("length只返回字符数")]),t._v(" "),a("h5",{attrs:{id:"字符串的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的特点"}},[t._v("#")]),t._v(" 字符串的特点")]),t._v(" "),a("p",[t._v("字符串是不可变的，一旦创建，值就不能改变。")]),t._v(" "),a("p",[t._v("要改变某个变量保存的字符串，需要先销毁再创建。")]),t._v(" "),a("h5",{attrs:{id:"转换为字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换为字符串"}},[t._v("#")]),t._v(" 转换为字符串")]),t._v(" "),a("p",[t._v("item.toString()")]),t._v(" "),a("p",[t._v("String(item)")]),t._v(" "),a("p",[t._v('item + ""')]),t._v(" "),a("h4",{attrs:{id:"object类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object类型"}},[t._v("#")]),t._v(" Object类型")]),t._v(" "),a("p",[t._v("对象是一组数组和功能的集合。可以通过执行new操作符后跟要创建的对象类型的名称来创建。")]),t._v(" "),a("p",[t._v("创建Object类型的实例并为其添加属性或方法，就可以创建自定义对象")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" o1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" o2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没构造参数的时候，可以省略括号（），但不推荐。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("Object的每个实例都具有下列属性和方法："),a("br"),t._v("\nconstructor"),a("br"),t._v("\nhasOwnProperty(propertyName)"),a("br"),t._v("\nisPrototypeOf(object)"),a("br"),t._v("\npropertyIsEnumerable(propertyName)"),a("br"),t._v("\ntoLocalString()"),a("br"),t._v("\ntoString()"),a("br"),t._v("\nvalueOf()")]),t._v(" "),a("h3",{attrs:{id:"操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[t._v("#")]),t._v(" 操作符")]),t._v(" "),a("p",[t._v("ECMA-262描述了一组用于操作数据值的操作符")]),t._v(" "),a("h4",{attrs:{id:"一元操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一元操作符"}},[t._v("#")]),t._v(" 一元操作符")]),t._v(" "),a("p",[t._v("++item"),a("br"),t._v("\n--item"),a("br"),t._v("\nitem++"),a("br"),t._v("\nitem--"),a("br"),t._v("\n+item"),a("br"),t._v("\n-item")]),t._v(" "),a("h4",{attrs:{id:"位操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位操作符"}},[t._v("#")]),t._v(" 位操作符")]),t._v(" "),a("p",[t._v("二进制"),a("br"),t._v("\n符号位"),a("br"),t._v("\n二进制补码")]),t._v(" "),a("p",[t._v("补码 = 反码 + 1")]),t._v(" "),a("p",[t._v("取反：~item"),a("br"),t._v("\n按位与：itemA & itemB"),a("br"),t._v("\n按位或：itemA | itemB"),a("br"),t._v("\n按位异或：itemA ^ itemB"),a("br"),t._v("\n左移：item << num"),a("br"),t._v("\n有符号右移：item >> num"),a("br"),t._v("\n无符号右移：item >>> num")]),t._v(" "),a("blockquote",[a("p",[t._v("左移不会影响操作数的符号位")])]),t._v(" "),a("h4",{attrs:{id:"布尔操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔操作符"}},[t._v("#")]),t._v(" 布尔操作符")]),t._v(" "),a("p",[t._v("逻辑非：!item"),a("br"),t._v("\n逻辑与：itemA && itemB"),a("br"),t._v("\n逻辑或：itemA || itemB")]),t._v(" "),a("h4",{attrs:{id:"乘性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#乘性操作符"}},[t._v("#")]),t._v(" 乘性操作符")]),t._v(" "),a("p",[t._v("乘法：itemA * itemB"),a("br"),t._v("\n除法：itemA / itemB"),a("br"),t._v("\n求模：itemA % itemB")]),t._v(" "),a("h4",{attrs:{id:"加性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加性操作符"}},[t._v("#")]),t._v(" 加性操作符")]),t._v(" "),a("p",[t._v("加法：itemA + itemB"),a("br"),t._v("\n减法：itemA - itemB")]),t._v(" "),a("h4",{attrs:{id:"关系操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系操作符"}},[t._v("#")]),t._v(" 关系操作符")]),t._v(" "),a("p",[t._v("小于：itemA < itemB"),a("br"),t._v("\n大于：itemA > itemB"),a("br"),t._v("\n小于等于：itemA <= itemB"),a("br"),t._v("\n大于等于：itemA >= itemB")]),t._v(" "),a("h4",{attrs:{id:"相等操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相等操作符"}},[t._v("#")]),t._v(" 相等操作符")]),t._v(" "),a("p",[t._v("相等：itemA == itemB"),a("br"),t._v("\n不相等：itemA != itemB"),a("br"),t._v("\n全等：itemA === itemB"),a("br"),t._v("\n不全等：itemA !== itemB")]),t._v(" "),a("h4",{attrs:{id:"条件操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件操作符"}},[t._v("#")]),t._v(" 条件操作符")]),t._v(" "),a("p",[t._v("三元操作符"),a("br"),t._v("\nbooleanExpression ? itemA : itemB")]),t._v(" "),a("h4",{attrs:{id:"赋值操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值操作符"}},[t._v("#")]),t._v(" 赋值操作符")]),t._v(" "),a("p",[t._v("const a = 1;")]),t._v(" "),a("p",[t._v("*="),a("br"),t._v("\n/="),a("br"),t._v("\n%="),a("br"),t._v("\n+="),a("br"),t._v("\n-="),a("br"),t._v("\n<<="),a("br"),t._v("\n>>="),a("br"),t._v("\n>>>=")]),t._v(" "),a("h4",{attrs:{id:"逗号操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逗号操作符"}},[t._v("#")]),t._v(" 逗号操作符")]),t._v(" "),a("p",[t._v("const num1 = 1, num2 = 2, num3 = 3;")]),t._v(" "),a("p",[t._v("const num = (1, 2, 3)")]),t._v(" "),a("p",[t._v("返回逗号表达式中的最后一项")]),t._v(" "),a("h3",{attrs:{id:"语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[t._v("#")]),t._v(" 语句")]),t._v(" "),a("p",[t._v("这些都是基础中的基础，是常识")]),t._v(" "),a("h4",{attrs:{id:"if语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[t._v("#")]),t._v(" if语句")]),t._v(" "),a("h4",{attrs:{id:"do-while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-while语句"}},[t._v("#")]),t._v(" do-while语句")]),t._v(" "),a("h4",{attrs:{id:"while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while语句"}},[t._v("#")]),t._v(" while语句")]),t._v(" "),a("h4",{attrs:{id:"for语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for语句"}},[t._v("#")]),t._v(" for语句")]),t._v(" "),a("h4",{attrs:{id:"for-in语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in语句"}},[t._v("#")]),t._v(" for-in语句")]),t._v(" "),a("h4",{attrs:{id:"label语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#label语句"}},[t._v("#")]),t._v(" label语句")]),t._v(" "),a("h4",{attrs:{id:"break和continue语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#break和continue语句"}},[t._v("#")]),t._v(" break和continue语句")]),t._v(" "),a("h4",{attrs:{id:"with语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with语句"}},[t._v("#")]),t._v(" with语句")]),t._v(" "),a("h4",{attrs:{id:"switch语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch语句"}},[t._v("#")]),t._v(" switch语句")]),t._v(" "),a("h3",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" something "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// statements")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" something"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" something "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// statements")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" something"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h4",{attrs:{id:"理解参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理解参数"}},[t._v("#")]),t._v(" 理解参数")]),t._v(" "),a("p",[t._v("在函数体内可以通过arguments对象来访问这个参数数组，从而获取传递给函数的每一个参数")]),t._v(" "),a("p",[t._v("arguments对象是类数组，不是Array的实例")]),t._v(" "),a("p",[t._v("arguments对象中的值会自动反映到对应的命名参数，他们的内存空间是独立的，但他们的值是同步的")]),t._v(" "),a("p",[t._v("没有传递值的命名参数将自动被赋予undefined值")]),t._v(" "),a("p",[t._v("严格模式下，对arguments赋值无效")]),t._v(" "),a("h4",{attrs:{id:"没有重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有重载"}},[t._v("#")]),t._v(" 没有重载")]),t._v(" "),a("p",[t._v("通过检查传入函数中参数的类型和数量并作出不同的反应，可以模仿方法的重载。")]),t._v(" "),a("h2",{attrs:{id:"变量、作用域和内存问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量、作用域和内存问题"}},[t._v("#")]),t._v(" 变量、作用域和内存问题")]),t._v(" "),a("h3",{attrs:{id:"基本类型和引用类型的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本类型和引用类型的值"}},[t._v("#")]),t._v(" 基本类型和引用类型的值")]),t._v(" "),a("p",[t._v("基本类型的值：保存在变量中的5种基本数据类型的实际的值\n引用类型的值：保存在内存中的对象")]),t._v(" "),a("p",[t._v("在操作对象时，实际上是在操作对象的引用而不是实际的对象。")]),t._v(" "),a("p",[t._v("引用类型的值是按引用访问的。")]),t._v(" "),a("p",[t._v("ECMAScript中所有函数的参数都是按值传递的。")]),t._v(" "),a("p",[t._v("当参数是对象，函数按值传递的值是指代的对象的引用。")]),t._v(" "),a("blockquote",[a("p",[t._v("虽然有点绕，但这些其实直观上还是很好理解，是常识")])]),t._v(" "),a("p",[t._v("typeof操作符是确定一个变量是字符串、数值、布尔值，还是undefined的最佳工具。")]),t._v(" "),a("p",[t._v("在检查引用类型的时候，typeof用处不大。为此，提供了instanceof操作符。")]),t._v(" "),a("blockquote",[a("p",[t._v("不过现在一般直接用Object.prototype.toString.call()来判断数据的类型。")])]),t._v(" "),a("h3",{attrs:{id:"执行环境及作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行环境及作用域"}},[t._v("#")]),t._v(" 执行环境及作用域")]),t._v(" "),a("p",[a("strong",[t._v("执行环境")]),t._v("（execution context）定义了变量或函数有权限访问的其他数据，决定了它们各自的行为。")]),t._v(" "),a("p",[t._v("每个执行环境都有一个与之关联的"),a("strong",[t._v("变量对象")]),t._v("(variable object)，环境中定义的所有变量和函数都保存在这个对象中。")]),t._v(" "),a("p",[t._v("全局执行环境是最外围的一个执行环境。")]),t._v(" "),a("p",[t._v("在web浏览器中，全局执行环境被认为是window对象，所有全局变量和函数都是作为window对象的属性和方法创建的。")]),t._v(" "),a("p",[t._v("每个函数都有自己的执行环境。当执行流进入一个函数时，函数的环境就会被推入一个环境栈中。")]),t._v(" "),a("p",[t._v("在函数执行之后，栈将其环境弹出，把控制权返回给之前的执行环境。")]),t._v(" "),a("p",[t._v("当代码在一个环境中执行时，会创建变量对象的一个作用域链。")]),t._v(" "),a("p",[a("strong",[t._v("作用域链")]),t._v("的用途，是保证对执行环境有权访问的所有变量和函数的有序访问。")]),t._v(" "),a("p",[t._v("作用域链的前端，始终都是当前执行的代码所在环境的变量对象。如果这个环境是函数，则将"),a("strong",[t._v("其活动对象")]),t._v("(activation object)作为变量对象。")]),t._v(" "),a("blockquote",[a("p",[t._v("这里的活动对象应该指代的是this？")])]),t._v(" "),a("p",[t._v("作用域链的下一个变量对象来自包含（外部）环境，再下一个变量对象则来自下一个包含环境。这样，一直延续到全局执行环境。")]),t._v(" "),a("p",[t._v("标识符解析是沿着作用域链从前端开始一级一级地搜索标识符的过程。")]),t._v(" "),a("h4",{attrs:{id:"没有块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有块级作用域"}},[t._v("#")]),t._v(" 没有块级作用域")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("使用var声明的变量会自动被添加到最接近的环境中。")]),t._v(" "),a("p",[t._v("没有var声明的变量会自动被添加到全局环境。")]),t._v(" "),a("blockquote",[a("p",[t._v("ES6 新增了let命令，用来声明变量。它的用法类似于var，但是所声明的变量，只在let命令所在的代码块内有效。")])]),t._v(" "),a("h3",{attrs:{id:"垃圾收集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集"}},[t._v("#")]),t._v(" 垃圾收集")]),t._v(" "),a("p",[t._v("标记清除")]),t._v(" "),a("p",[t._v("引用计数")]),t._v(" "),a("p",[t._v("解除引用：一旦数据不再有用，最好通过将其值设置为null来释放其引用")])])}),[],!1,null,null,null);v.default=s.exports}}]);